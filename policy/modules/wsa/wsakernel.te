policy_module(wsakernel, 1.0.0)

########################################
#
# Declarations
#

type kernel, domain, mlstrustedsubject;

sid any_socket u:object_r:unlabeled:s0
sid devnull u:object_r:null_device:s0
sid file u:object_r:unlabeled:s0
sid file_labels u:object_r:unlabeled:s0
sid fs u:object_r:labeledfs:s0
sid icmp_socket u:object_r:unlabeled:s0
sid igmp_packet u:object_r:unlabeled:s0
sid init u:object_r:unlabeled:s0
sid kernel u:r:kernel:s0
sid kmod u:object_r:unlabeled:s0
sid netif u:object_r:netif:s0
sid netmsg u:object_r:unlabeled:s0
sid node u:object_r:node:s0
sid policy u:object_r:unlabeled:s0
sid port u:object_r:port:s0
sid scmp_packet u:object_r:unlabeled:s0
sid security u:object_r:kernel:s0
sid sysctl u:object_r:proc:s0
sid sysctl_dev u:object_r:unlabeled:s0
sid sysctl_fs u:object_r:unlabeled:s0
sid sysctl_kernel u:object_r:unlabeled:s0
sid sysctl_modprobe u:object_r:unlabeled:s0
sid sysctl_net u:object_r:unlabeled:s0
sid sysctl_net_unix u:object_r:unlabeled:s0
sid sysctl_vm u:object_r:unlabeled:s0
sid tcp_socket u:object_r:unlabeled:s0
sid unlabeled u:object_r:unlabeled:s0

domain_subj_id_change_exemption(kernel)
domain_role_change_exemption(kernel)

allow kernel apex_mnt_dir:dir search;
allow kernel cache_file:dir search;
allow kernel device_t:chr_file read;
allow kernel device:dir mounton;
allow kernel device:dir search;
allow kernel devpts_t:chr_file { open read write };
allow kernel devpts_t:dir search;
allow kernel devpts_t:filesystem mount;
allow kernel fs_t:filesystem { mount unmount };
allow kernel fs_t:filesystem getattr;
allow kernel fsck_exec:file { execute_no_trans open read };
allow kernel fsck_exec:file execute;
allow kernel gsi_metadata_file:dir search;
allow kernel init_exec:file { execute map read };
allow kernel init_exec:file { execute_no_trans open };
allow kernel init_exec:file entrypoint;
allow kernel init_exec:file getattr;
allow kernel kernel_t:fd use;
allow kernel kernel_t:process setsched;
allow kernel linkerconfig_file:dir search;
allow kernel metadata_file:dir getattr;
allow kernel metadata_file:dir mounton;
allow kernel metadata_file:dir search;
allow kernel proc_t:dir mounton;
allow kernel proc_t:dir search;
allow kernel proc_t:file { getattr open read };
allow kernel proc_t:file { open read };
allow kernel proc_t:file setattr;
allow kernel proc_t:filesystem mount;
allow kernel root_t:chr_file { read write };
allow kernel rootfs:dir { getattr open read };
allow kernel rootfs:dir search;
allow kernel security_t:dir search;
allow kernel security_t:file { read write };
allow kernel security_t:file open;
allow kernel security_t:filesystem getattr;
allow kernel security_t:filesystem mount;
allow kernel security_t:security load_policy;
allow kernel self:capability { mknod setgid };
allow kernel self:capability dac_read_search;
allow kernel self:capability net_admin;
allow kernel self:capability sys_admin;
allow kernel self:capability sys_nice;
allow kernel self:netlink_kobject_uevent_socket { bind getopt };
allow kernel self:netlink_kobject_uevent_socket { create setopt };
allow kernel self:netlink_kobject_uevent_socket read;
allow kernel self:process getsched;
allow kernel self:process setsched;
allow kernel self:unix_dgram_socket { connect create };
allow kernel self:unix_stream_socket { connect create };
allow kernel sepolicy_file:file read;
allow kernel sysfs_t:dir mounton;
allow kernel sysfs_t:dir read;
allow kernel sysfs_t:dir search;
allow kernel sysfs_t:file { open write };
allow kernel sysfs_t:filesystem mount;
allow kernel sysfs_t:lnk_file read;
allow kernel sysfs:dir mounton;
allow kernel sysfs:dir search;
allow kernel system_bootstrap_lib_file:dir search;
allow kernel system_bootstrap_lib_file:file { getattr map open read };
allow kernel system_bootstrap_lib_file:file execute;
allow kernel system_file:dir { getattr mounton };
allow kernel system_file:dir search;
allow kernel system_file:file { getattr open };
allow kernel system_file:file read;
allow kernel system_file:lnk_file read;
allow kernel system_lib_file:dir { getattr search };
allow kernel system_lib_file:file { execute getattr map };
allow kernel system_lib_file:file { open read };
allow kernel system_linker_exec:file { execute map read };
allow kernel system_linker_exec:file open;
allow kernel system_linker_exec:lnk_file read;
allow kernel tmpfs_t:blk_file { create setattr };
allow kernel tmpfs_t:blk_file { getattr open read };
allow kernel tmpfs_t:blk_file ioctl;
allow kernel tmpfs_t:chr_file { create open read write };
allow kernel tmpfs_t:chr_file getattr;
allow kernel tmpfs_t:chr_file ioctl;
allow kernel tmpfs_t:chr_file setattr;
allow kernel tmpfs_t:chr_file write;
allow kernel tmpfs_t:dir { add_name create mounton search write };
allow kernel tmpfs_t:dir getattr;
allow kernel tmpfs_t:filesystem mount;
allow kernel tmpfs:dir mounton;
allow kernel tmpfs:dir search;
allow kernel vendor_configs_file:dir search;
allow kernel vendor_configs_file:file { getattr open read };
allow kernel vendor_configs_file:lnk_file read;
allow kernel vendor_file:dir { getattr mounton };
allow kernel vendor_file:dir search;
allow kernel vendor_file:lnk_file read;
allow kernel wsl_init_t:fd use;
