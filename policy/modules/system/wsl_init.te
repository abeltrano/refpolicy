policy_module(wsl_init, 1.0.0)

########################################
#
# Declarations
#

attribute mlstrustedsubject;
type kernel, domain, mlstrustedsubject;

type wsl_init_t;
type wsl_init_exec_t;
typealias wsl_init_t alias wsl_init;
# typealias kernel_t alias kernel;

# Android type fordware declarations
type apex_mnt_dir;
type cache_file;
type derive_classpath;
type device;
type fsck_exec;
type gsi_metadata_file;
type hwservicemanager;
type idmap;
type init_exec;
type init;
type linkerconfig_file;
type metadata_file;
type netd;
type odsign;
type rcmsvc;
type rootfs;
type sepolicy_file;
type servicemanager;
type sysfs;
type system_app;
type system_bootstrap_lib_file;
type system_data_root_file;
type system_file;
type system_lib_file;
type system_linker_exec;
type system_server;
type tmpfs;
type ueventd;
type unlabeled;
type vendor_configs_file;
type vendor_file;

domain_base_type(wsl_init_t);
unconfined_domain(wsl_init_t);
domain_dyntrans_type(wsl_init_t);

role r;
role r types { 
    kernel 
    kernel_t 
    wsl_init_t 
};

# Needed for context and role changes
allow system_r {
    r
};

domain_subj_id_change_exemption(kernel_t)
domain_subj_id_change_exemption(kernel)
domain_role_change_exemption(kernel_t)
domain_role_change_exemption(kernel)

#============= wsl_init_t ==============
allow wsl_init_t kernel:process transition;
allow wsl_init_t self:netlink_tcpdiag_socket { nlmsg_read write };

#============= unlabeled_t ==============
allow unlabeled_t tmpfs_t:filesystem associate;

#============= kernel_t ==============
allow kernel_t wsl_init_t:process { dyntransition setcurrent };

#============= kernel ==============
allow kernel init_exec:file entrypoint;
allow kernel_t init_exec:file entrypoint;

#============= wsl_init_t ==============
allow wsl_init_t init_exec:file { execute open read };
allow wsl_init_t init_exec:lnk_file read;

#!!!! This avc is allowed in the current policy
allow wsl_init_t root_t:chr_file write;

#!!!! This avc is allowed in the current policy
allow wsl_init_t root_t:dir search;
allow wsl_init_t rootfs:dir { mounton search };

#!!!! This avc is allowed in the current policy
allow wsl_init_t self:capability net_admin;

#!!!! This avc is allowed in the current policy
allow wsl_init_t self:netlink_tcpdiag_socket { nlmsg_read read write };
allow wsl_init_t system_file:dir search;
allow wsl_init_t system_linker_exec:file execute;

#============= kernel ==============
allow kernel self:capability sys_admin;
allow kernel tmpfs:dir search;
allow kernel proc_t:dir search;
allow kernel proc_t:file { getattr open read };
allow kernel proc_t:file { open read };
allow kernel security_t:file open;
allow kernel security_t:security load_policy;
allow kernel sysfs_t:dir search;
allow kernel tmpfs_t:chr_file write;

allow kernel security_t:dir search;
allow kernel security_t:file { read write };
allow kernel security_t:filesystem getattr;
allow kernel sepolicy_file:file read;
allow kernel vendor_configs_file:dir search;
allow kernel vendor_configs_file:file { getattr open read };
allow kernel device_t:chr_file read;
allow kernel init_exec:file { execute map read };
allow kernel kernel_t:fd use;
allow kernel root_t:chr_file { read write };
allow kernel wsl_init_t:fd use;
allow kernel device:dir search;
allow kernel init_exec:file getattr;
allow kernel rootfs:dir search;
allow kernel self:process getsched;
allow kernel system_file:dir search;
allow kernel system_linker_exec:file { execute map read };
allow kernel security_t:dir search;
allow kernel security_t:file { read write };
allow kernel security_t:filesystem getattr;
allow kernel sepolicy_file:file read;
allow kernel vendor_configs_file:dir search;
allow kernel vendor_configs_file:file { getattr open read };
allow kernel cache_file:dir search;
allow kernel init_exec:file { execute_no_trans open };
allow kernel self:capability dac_read_search;
allow kernel system_file:dir { getattr mounton };
allow kernel system_linker_exec:file open;
allow kernel tmpfs_t:blk_file ioctl;
allow kernel gsi_metadata_file:dir search;
allow kernel self:unix_dgram_socket { connect create };
allow kernel self:unix_stream_socket { connect create };
allow kernel tmpfs_t:chr_file getattr;
allow kernel vendor_file:dir { getattr mounton };
allow kernel apex_mnt_dir:dir search;
allow kernel devpts_t:chr_file { open read write };
allow kernel devpts_t:dir search;
allow kernel fsck_exec:file { execute_no_trans open read };
allow kernel system_linker_exec:lnk_file read;
allow kernel tmpfs_t:chr_file ioctl;
allow kernel fs_t:filesystem { mount unmount };
allow kernel fsck_exec:file execute;
allow kernel kernel_t:process setsched;
allow kernel metadata_file:dir mounton;
allow kernel tmpfs_t:blk_file { getattr open read };
allow kernel metadata_file:dir getattr;
allow kernel self:netlink_kobject_uevent_socket read;
allow kernel sysfs_t:lnk_file read;
allow kernel tmpfs_t:blk_file { create setattr };
allow kernel tmpfs_t:chr_file setattr;
allow kernel tmpfs_t:dir getattr;
allow kernel vendor_configs_file:lnk_file read;
allow kernel self:capability net_admin;
allow kernel self:netlink_kobject_uevent_socket { bind getopt };
allow kernel sysfs_t:dir read;
allow kernel sysfs_t:file { open write };
allow kernel system_file:file read;
allow kernel linkerconfig_file:dir search;
allow kernel system_bootstrap_lib_file:dir search;
allow kernel system_lib_file:dir { getattr search };
allow kernel system_lib_file:file { open read };
allow kernel vendor_file:dir search;
allow kernel vendor_file:lnk_file read;
allow kernel fs_t:filesystem getattr;
allow kernel system_bootstrap_lib_file:file { getattr map open read };
allow kernel system_lib_file:file { execute getattr map };
allow kernel device:dir mounton;
allow kernel proc_t:file { getattr open read };
allow kernel self:capability sys_nice;
allow kernel self:process setsched;
allow kernel sysfs:dir search;
allow kernel system_bootstrap_lib_file:file execute;
allow kernel devpts_t:filesystem mount;
allow kernel proc_t:dir mounton;
allow kernel tmpfs_t:dir { add_name create mounton search write };
allow kernel tmpfs_t:filesystem mount;
allow kernel proc_t:file setattr;
allow kernel proc_t:filesystem mount;
allow kernel security_t:filesystem mount;
allow kernel self:capability { mknod setgid };
allow kernel sysfs:dir mounton;
allow kernel sysfs_t:dir mounton;
allow kernel rootfs:dir { getattr open read };
allow kernel sysfs_t:filesystem mount;
allow kernel tmpfs:dir mounton;
allow kernel tmpfs_t:chr_file { create open read write };
allow kernel metadata_file:dir search;
allow kernel self:netlink_kobject_uevent_socket { create setopt };
allow kernel system_file:file { getattr open };
allow kernel system_file:lnk_file read;

#============= wsl_init_t ==============
allow wsl_init_t system_linker_exec:file { open read };

